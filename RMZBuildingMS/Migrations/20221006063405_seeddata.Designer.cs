// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RMZBuildingMS.Models;

#nullable disable

namespace RMZBuildingMS.Migrations
{
    [DbContext(typeof(RMZContext))]
    [Migration("20221006063405_seeddata")]
    partial class seeddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RMZBuildingMS.Models.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BuildingId"));

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FacilityId")
                        .HasColumnType("integer");

                    b.HasKey("BuildingId");

                    b.HasIndex("FacilityId");

                    b.ToTable("buildings");

                    b.HasData(
                        new
                        {
                            BuildingId = 1,
                            BuildingName = "Building1",
                            FacilityId = 1
                        },
                        new
                        {
                            BuildingId = 2,
                            BuildingName = "Building2",
                            FacilityId = 2
                        },
                        new
                        {
                            BuildingId = 3,
                            BuildingName = "Building3",
                            FacilityId = 3
                        },
                        new
                        {
                            BuildingId = 4,
                            BuildingName = "building4",
                            FacilityId = 4
                        });
                });

            modelBuilder.Entity("RMZBuildingMS.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CityId");

                    b.ToTable("Citys");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CityName = "Bangalore"
                        },
                        new
                        {
                            CityId = 2,
                            CityName = "Gurgao"
                        },
                        new
                        {
                            CityId = 3,
                            CityName = "Delhi"
                        });
                });

            modelBuilder.Entity("RMZBuildingMS.Models.Facility", b =>
                {
                    b.Property<int>("FacilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FacilityId"));

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FacilityId");

                    b.HasIndex("CityId");

                    b.ToTable("Facilities");

                    b.HasData(
                        new
                        {
                            FacilityId = 1,
                            CityId = 1,
                            FacilityName = "WhiteField"
                        },
                        new
                        {
                            FacilityId = 2,
                            CityId = 2,
                            FacilityName = "sector 5"
                        },
                        new
                        {
                            FacilityId = 3,
                            CityId = 3,
                            FacilityName = "hauz kahs"
                        },
                        new
                        {
                            FacilityId = 4,
                            CityId = 1,
                            FacilityName = "Electronic city"
                        });
                });

            modelBuilder.Entity("RMZBuildingMS.Models.Floor", b =>
                {
                    b.Property<int>("FloorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FloorId"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<string>("FloorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FloorId");

                    b.HasIndex("BuildingId");

                    b.ToTable("floors");

                    b.HasData(
                        new
                        {
                            FloorId = 1,
                            BuildingId = 1,
                            FloorName = "Floor1"
                        },
                        new
                        {
                            FloorId = 2,
                            BuildingId = 2,
                            FloorName = "Floor2"
                        },
                        new
                        {
                            FloorId = 3,
                            BuildingId = 3,
                            FloorName = "Floor3"
                        },
                        new
                        {
                            FloorId = 4,
                            BuildingId = 4,
                            FloorName = "Floor4"
                        });
                });

            modelBuilder.Entity("RMZBuildingMS.Models.Zone", b =>
                {
                    b.Property<string>("ZoneId")
                        .HasColumnType("text");

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ElectricMeter")
                        .HasColumnType("numeric");

                    b.Property<int>("FacilityId")
                        .HasColumnType("integer");

                    b.Property<int>("FloorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReadingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("WaterMeter")
                        .HasColumnType("numeric");

                    b.HasKey("ZoneId");

                    b.HasIndex("BuildingId");

                    b.HasIndex("FacilityId");

                    b.HasIndex("FloorId");

                    b.ToTable("zones");

                    b.HasData(
                        new
                        {
                            ZoneId = "Zone1",
                            BuildingId = 1,
                            ElectricMeter = 3004m,
                            FacilityId = 2,
                            FloorId = 1,
                            ReadingDate = new DateTime(2022, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaterMeter = 298m
                        },
                        new
                        {
                            ZoneId = "Zone2",
                            BuildingId = 2,
                            ElectricMeter = 2509m,
                            FacilityId = 3,
                            FloorId = 2,
                            ReadingDate = new DateTime(2022, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaterMeter = 208m
                        },
                        new
                        {
                            ZoneId = "Zone3",
                            BuildingId = 3,
                            ElectricMeter = 2507m,
                            FacilityId = 1,
                            FloorId = 3,
                            ReadingDate = new DateTime(2022, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaterMeter = 298m
                        },
                        new
                        {
                            ZoneId = "Zone4",
                            BuildingId = 4,
                            ElectricMeter = 2098m,
                            FacilityId = 4,
                            FloorId = 4,
                            ReadingDate = new DateTime(2022, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaterMeter = 98m
                        },
                        new
                        {
                            ZoneId = "Zone5",
                            BuildingId = 3,
                            ElectricMeter = 2004m,
                            FacilityId = 2,
                            FloorId = 1,
                            ReadingDate = new DateTime(2022, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaterMeter = 203m
                        },
                        new
                        {
                            ZoneId = "Zone6",
                            BuildingId = 2,
                            ElectricMeter = 3549m,
                            FacilityId = 1,
                            FloorId = 2,
                            ReadingDate = new DateTime(2022, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaterMeter = 268m
                        },
                        new
                        {
                            ZoneId = "Zone7",
                            BuildingId = 2,
                            ElectricMeter = 2508m,
                            FacilityId = 3,
                            FloorId = 3,
                            ReadingDate = new DateTime(2022, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaterMeter = 283m
                        });
                });

            modelBuilder.Entity("RMZBuildingMS.Models.Building", b =>
                {
                    b.HasOne("RMZBuildingMS.Models.Facility", "Facility")
                        .WithMany("Buildings")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("RMZBuildingMS.Models.Facility", b =>
                {
                    b.HasOne("RMZBuildingMS.Models.City", "City")
                        .WithMany("Facilities")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("RMZBuildingMS.Models.Floor", b =>
                {
                    b.HasOne("RMZBuildingMS.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("RMZBuildingMS.Models.Zone", b =>
                {
                    b.HasOne("RMZBuildingMS.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMZBuildingMS.Models.Facility", "Facility")
                        .WithMany()
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMZBuildingMS.Models.Floor", "Floor")
                        .WithMany("Zones")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");

                    b.Navigation("Facility");

                    b.Navigation("Floor");
                });

            modelBuilder.Entity("RMZBuildingMS.Models.City", b =>
                {
                    b.Navigation("Facilities");
                });

            modelBuilder.Entity("RMZBuildingMS.Models.Facility", b =>
                {
                    b.Navigation("Buildings");
                });

            modelBuilder.Entity("RMZBuildingMS.Models.Floor", b =>
                {
                    b.Navigation("Zones");
                });
#pragma warning restore 612, 618
        }
    }
}
